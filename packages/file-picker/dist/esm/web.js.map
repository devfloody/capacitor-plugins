{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type {\r\n  ConvertHeicToJpegOptions,\r\n  ConvertHeicToJpegResult,\r\n  FilePickerPlugin,\r\n  PickFilesOptions,\r\n  PickFilesResult,\r\n  PickImagesOptions,\r\n  PickImagesResult,\r\n  PickMediaOptions,\r\n  PickMediaResult,\r\n  PickVideosOptions,\r\n  PickVideosResult,\r\n  PickedFile,\r\n} from './definitions';\r\n\r\nexport class FilePickerWeb extends WebPlugin implements FilePickerPlugin {\r\n  public readonly ERROR_PICK_FILE_CANCELED = 'pickFiles canceled.';\r\n\r\n  public async convertHeicToJpeg(\r\n    _options: ConvertHeicToJpegOptions,\r\n  ): Promise<ConvertHeicToJpegResult> {\r\n    throw this.unimplemented('Not implemented on web.');\r\n  }\r\n\r\n  public async pickFiles(options?: PickFilesOptions): Promise<PickFilesResult> {\r\n    const pickedFiles = await this.openFilePicker(options);\r\n    if (!pickedFiles) {\r\n      throw new Error(this.ERROR_PICK_FILE_CANCELED);\r\n    }\r\n    const result: PickFilesResult = {\r\n      files: [],\r\n    };\r\n    for (const pickedFile of pickedFiles) {\r\n      const file: PickedFile = {\r\n        blob: pickedFile,\r\n        modifiedAt: pickedFile.lastModified,\r\n        mimeType: this.getMimeTypeFromUrl(pickedFile),\r\n        name: this.getNameFromUrl(pickedFile),\r\n        path: undefined,\r\n        size: this.getSizeFromUrl(pickedFile),\r\n      };\r\n      if (options?.readData) {\r\n        file.data = await this.getDataFromFile(pickedFile);\r\n      }\r\n      result.files.push(file);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public async pickImages(\r\n    options?: PickImagesOptions,\r\n  ): Promise<PickImagesResult> {\r\n    return this.pickFiles({ types: ['image/*'], ...options });\r\n  }\r\n\r\n  public async pickMedia(options?: PickMediaOptions): Promise<PickMediaResult> {\r\n    return this.pickFiles({ types: ['image/*', 'video/*'], ...options });\r\n  }\r\n\r\n  public async pickVideos(\r\n    options?: PickVideosOptions,\r\n  ): Promise<PickVideosResult> {\r\n    return this.pickFiles({ types: ['video/*'], ...options });\r\n  }\r\n\r\n  private async openFilePicker(\r\n    options?: PickFilesOptions,\r\n  ): Promise<File[] | undefined> {\r\n    const accept = options?.types?.join(',') || '';\r\n    const limit = options?.limit === undefined ? 0 : options.limit;\r\n    return new Promise(resolve => {\r\n      let onChangeFired = false;\r\n      const input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.accept = accept;\r\n      input.multiple = limit === 0;\r\n      input.addEventListener(\r\n        'change',\r\n        () => {\r\n          onChangeFired = true;\r\n          const files = Array.from(input.files || []);\r\n          resolve(files);\r\n        },\r\n        { once: true },\r\n      );\r\n      // Workaround to detect when Cancel is selected in the File Selection dialog box.\r\n      window.addEventListener(\r\n        'focus',\r\n        async () => {\r\n          await this.wait(1000);\r\n          if (onChangeFired) {\r\n            return;\r\n          }\r\n          resolve(undefined);\r\n        },\r\n        { once: true },\r\n      );\r\n      input.click();\r\n    });\r\n  }\r\n\r\n  private async getDataFromFile(file: File): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        const result = typeof reader.result === 'string' ? reader.result : '';\r\n        const splittedResult = result.split('base64,');\r\n        const base64 = splittedResult[1] || '';\r\n        resolve(base64);\r\n      };\r\n      reader.onerror = error => {\r\n        reject(error);\r\n      };\r\n    });\r\n  }\r\n\r\n  private getNameFromUrl(file: File): string {\r\n    return file.name;\r\n  }\r\n\r\n  private getMimeTypeFromUrl(file: File): string {\r\n    return file.type;\r\n  }\r\n\r\n  private getSizeFromUrl(file: File): number {\r\n    return file.size;\r\n  }\r\n\r\n  private async wait(delayMs: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, delayMs));\r\n  }\r\n}\r\n"]}